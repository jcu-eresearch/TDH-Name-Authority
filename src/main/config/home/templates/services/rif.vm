#set($defaultOnError = "&Invalid XML placeholder... prevents ANDS Harvesting records in error&")
#set($group = $systemConfig.getString($defaultOnError, "redbox.identity", "RIF-CS Group"))

##### START Identifier resolution
#set($pidProperty = $systemConfig.getString($defaultOnError, "curation", "pidProperty"))
#set ($pid = $util.getMetadata($object, $pidProperty))
#if ("$!pid" == "")
    #set ($pid = $util.get($item, "metadata", "rdf:resource"))
    #if ("$!pid" == "")
        #set ($pid = $util.get($item, "metadata", "dc.identifier"))
    #end
#end
##### END Identifier resolution

<registryObjects xmlns="http://ands.org.au/standards/rif-cs/registryObjects" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://ands.org.au/standards/rif-cs/registryObjects http://services.ands.org.au/documentation/rifcs/1.3/schema/registryObjects.xsd">
    <registryObject group="$util.encodeXml($group)">
        <key>$util.encodeXml($pid)</key>
        <originatingSource>$urlBase</originatingSource>
        <service type="$util.encodeXml($util.get($item, 'data', 'Type'))">
            <identifier type="uri">$util.encodeXml($pid)</identifier>

            ### Name
            <name type="primary">
                <namePart type="title">$util.encodeXml($util.get($item, "data", "Name"))</namePart>
            </name>

            ### Home Page
            #set ($value = $util.get($item, "data", "Location"))
            #if ("$!value" != "")
            <location>
                <address>
                    <physical>
                        <addressPart type="text">$util.encodeXml($value)</addressPart>
                    </physical>
                </address>
            </location>
            #end

            #set ($value = $util.get($item, "data", "Location_URL"))
            #if ("$!value" != "")
            <location>
                <address>
                    <electronic type="url">
                        <value>$util.encodeXml($value)</value>
                    </electronic>
                </address>
            </location>
            #end

            ### ANZSRC
            #set ($value = $util.get($item, "data", "ANZSRC_FOR_1"))
            #if ("$!value" != "")
            <subject type="anzsrc-for">$util.encodeXml($value)</subject>
            #end
            #set ($value = $util.get($item, "data", "ANZSRC_FOR_2"))
            #if ("$!value" != "")
            <subject type="anzsrc-for">$util.encodeXml($value)</subject>
            #end
            #set ($value = $util.get($item, "data", "ANZSRC_FOR_3"))
            #if ("$!value" != "")
            <subject type="anzsrc-for">$util.encodeXml($value)</subject>
            #end
            #set ($value = $util.get($item, "data", "Keywords"))
            #if ("$!value" != "")
            <subject type="local">$util.encodeXml($value)</subject>
            #end

            ### Description
            ##JCU: Altered to cater for Software Services
            #set ($fullDesc = $util.get($item, "data", "full_description"))
            #set ($briefDesc = $util.get($item, "data", "brief_description"))
            #set ($noteDesc1 = $util.get($item, "data", "note_description_1"))
            #set ($noteDesc2 = $util.get($item, "data", "note_description_2"))
            #set ($deliveryMethod = $util.get($item, "data", "deliverymethod"))
            #if ("$!fullDesc" != "")
            <description type="full">$util.encodeXml($fullDesc)</description>
            #end 
            #if ("$!briefDesc" != "")
            <description type="brief">$util.encodeXml($briefDesc)</description>
            #end 
            #if ("$!noteDesc1" != "")
            <description type="note">$util.encodeXml($noteDesc1)</description>
            #end 
            #if ("$!noteDesc2" != "")
            <description type="note">$util.encodeXml($noteDesc2)</description>
            #end 
            #if ("$!deliveryMethod" != "")
            <description type="deliverymethod">$util.encodeXml($deliveryMethod)</description>
            #end 

            #set ($value = $util.get($item, "data", "Description"))
            #if ("$!value" != "")
            <description type="full">$util.encodeXml($value)</description>
            #end

            ### Relations
            #set($valueList = $item.getJsonSimpleList("relationships"))
            #if($valueList)
                #foreach($value in $valueList)
                    #if ($value.getBoolean(false, "isCurated"))
                        #set($key = $value.getString("empty", "curatedPid"))
                        #set($rel = $value.getString("hasAssociationWith", "relationship"))
                        #if ($key != "empty")
            <relatedObject>
                <key>$util.encodeXml($key)</key>
                <relation type="$util.encodeXml($rel)"/>
            </relatedObject>
                        #end
                    #end
                #end
            #end

            ### Relations
            #set($party1 = $util.get($item, "data", "Related_party1"))
            #set($rel1 = $util.get($item, "data", "Related_relationship1"))
            #if("$!party1" != "")
            <relatedObject>
                <key>$util.encodeXml($party1)</key>
                <relation type="$util.encodeXml($rel1)"/>
            </relatedObject>
            #end
            #set($party2 = $util.get($item, "data", "Related_party2"))
            #set($rel2 = $util.get($item, "data", "Related_relationship2"))
            #if("$!party2" != "")
            <relatedObject>
                <key>$util.encodeXml($party2)</key>
                <relation type="$util.encodeXml($rel2)"/>
            </relatedObject>
            #end

            ### Related Website
            #set($website = $util.get($item, "data", "Website"))
            #set($websiteTitle = $util.get($item, "data", "Website_Title"))
            #if ("$!website" != "")
            <relatedInfo type="website">
                <identifier type="uri">$util.encodeXml($website)</identifier>
                <title>$util.encodeXml($websiteTitle)</title>
            </relatedInfo>
            #end

            #set ($accessRights = $util.get($item, "data", "access_rights"))
            #set ($license = $util.get($item, "data", "licence"))
            #set ($licenseURL = $util.get($item, "data", "licence_URL"))
            #if ("$!accessRights" != "" && "$!license" != "" && "$!licenseURL" != "")
            <rights>
                <accessRights>$util.encodeXml($accessRights)</accessRights>
                <licence rightsUri="$util.encodeXml($licenseURL)" type="Unknown">$util.encodeXml($license)</licence>
            </rights>
            #end

        </service>
    </registryObject>
</registryObjects>